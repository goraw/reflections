How did viewing a diff between two versions of a file help you see the bug that was introduced?
It process two files and shows difference between two files line by line.
How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
It makes it easier to compare two version of same file and locate thier differeces conveniently 
What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google docs does?
pros:
	1. User decides when to commit 
	2. Better control on size and logical grouping of commits 
Cons:
	1. Commits could be logically not connected 
	2. Commits size is arbitrary and could lead to inefficiency 

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
Some files are related to each other therefore it make sense to track all those together. Some files are independent to each other therefore there is no reason to associate them with other files change. 
How can you use the commands git log and git diff to view the history of files?
git log list out history of changes made on the file.  git diff is used to compare two changes (commits)
How might using version control make you more confident to make changes that could break something?
I can track back to the earlier version of a file and figure out where the bug is introduced.
Now that you have your workspace set up, what do you want to try using Git for?
play with it.
What happens when you initialize a repository? Why do you need to do it?
It creates branches and mark untracked files in repo. Initlizing repro is first step to creating version control through git.